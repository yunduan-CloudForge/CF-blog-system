version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: blog-frontend
    restart: unless-stopped
    networks:
      - blog-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: blog-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_PATH=/app/data/blog.db
      - UPLOAD_PATH=/app/uploads
      - LOG_FILE_PATH=/app/logs
    env_file:
      - .env.production
    volumes:
      - blog-data:/app/data
      - blog-uploads:/app/uploads
      - blog-logs:/app/logs
      - blog-backups:/app/backups
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - blog-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库备份服务
  backup:
    image: alpine:latest
    container_name: blog-backup
    restart: unless-stopped
    environment:
      - BACKUP_INTERVAL=86400
      - BACKUP_RETENTION_DAYS=30
    volumes:
      - blog-data:/data:ro
      - blog-backups:/backups
      - ./scripts:/scripts:ro
    networks:
      - blog-network
    command: |
      sh -c '
        apk add --no-cache sqlite curl
        while true; do
          /scripts/backup.sh
          sleep $$BACKUP_INTERVAL
        done
      '
    depends_on:
      - backend

  # 监控服务（可选）
  watchtower:
    image: containrrr/watchtower
    container_name: blog-watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - blog-network

volumes:
  blog-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  blog-uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./uploads
  blog-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  blog-backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backups
  nginx-logs:
    driver: local

networks:
  blog-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16