# Jaeger configuration for distributed tracing

# Collector configuration
collector:
  # gRPC server settings
  grpc-server:
    host-port: 0.0.0.0:14250
  # HTTP server settings
  http-server:
    host-port: 0.0.0.0:14268
  # Zipkin HTTP server settings
  zipkin:
    host-port: 0.0.0.0:9411
  # Log level
  log-level: info
  # Queue size for the collector
  queue:
    size: 2000
  # Number of workers pulling from the queue
  num-workers: 50

# Query service configuration
query:
  # HTTP server settings
  http-server:
    host-port: 0.0.0.0:16686
  # gRPC server settings
  grpc-server:
    host-port: 0.0.0.0:16685
  # Log level
  log-level: info
  # Base path for the UI
  base-path: /
  # Additional response headers
  additional-headers:
    - "Access-Control-Allow-Origin: *"
    - "Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS"
    - "Access-Control-Allow-Headers: Content-Type, Authorization"

# Agent configuration
agent:
  # Jaeger agent server settings
  jaeger:
    # gRPC settings
    grpc:
      host-port: 0.0.0.0:14250
    # Thrift settings
    thrift:
      compact:
        host-port: 0.0.0.0:6831
      binary:
        host-port: 0.0.0.0:6832
      http:
        host-port: 0.0.0.0:5778
  # Zipkin settings
  zipkin:
    thrift:
      compact:
        host-port: 0.0.0.0:5775
      binary:
        host-port: 0.0.0.0:5776
  # Log level
  log-level: info
  # Processor settings
  processor:
    jaeger-compact:
      server-max-packet-size: 65000
      server-host-port: 0.0.0.0:6831
      server-queue-size: 1000
      workers: 10
    jaeger-binary:
      server-max-packet-size: 65000
      server-host-port: 0.0.0.0:6832
      server-queue-size: 1000
      workers: 10
    zipkin-compact:
      server-max-packet-size: 65000
      server-host-port: 0.0.0.0:5775
      server-queue-size: 1000
      workers: 10

# Storage configuration
storage:
  type: elasticsearch
  elasticsearch:
    server-urls: http://elasticsearch:9200
    index-prefix: jaeger
    # Number of shards for indices
    num-shards: 1
    # Number of replicas for indices
    num-replicas: 0
    # Bulk processing settings
    bulk:
      size: 5000000
      workers: 1
      flush-interval: 200ms
    # Index settings
    create-index-templates: true
    version: 7
    # Timeout settings
    timeout: 0s
    # Authentication (if needed)
    # username: elastic
    # password: changeme
    # TLS settings (if needed)
    # tls:
    #   enabled: true
    #   cert: /path/to/cert.pem
    #   key: /path/to/key.pem
    #   ca: /path/to/ca.pem
    #   server-name: elasticsearch
    #   skip-host-verify: false

# Sampling configuration
sampling:
  # Default sampling strategy
  default_strategy:
    type: probabilistic
    param: 0.1  # Sample 10% of traces
  # Per-service sampling strategies
  per_service_strategies:
    - service: blog-system-api
      type: probabilistic
      param: 0.5  # Sample 50% of API traces
    - service: blog-system-frontend
      type: probabilistic
      param: 0.2  # Sample 20% of frontend traces
    - service: blog-system-auth
      type: probabilistic
      param: 0.8  # Sample 80% of auth traces
    - service: blog-system-database
      type: probabilistic
      param: 0.3  # Sample 30% of database traces
  # Maximum traces per second
  max_traces_per_second: 100

# Metrics configuration
metrics:
  backend: prometheus
  http-route: /metrics
  namespace: jaeger
  subsystem: ""
  help-namespace: jaeger

# Span storage options
span-storage:
  type: elasticsearch

# Dependencies storage options
dependencies-storage:
  type: elasticsearch

# Downsampling configuration
downsampling:
  # Enable downsampling
  enabled: true
  # Ratio for downsampling (0.1 = 10%)
  ratio: 0.1
  # Hash salt for consistent downsampling
  hash-salt: "jaeger-downsampling"

# Archive configuration
archive:
  enabled: false
  # Archive storage configuration would go here

# Admin configuration
admin:
  http:
    host-port: 0.0.0.0:14269

# Multi-tenancy configuration
multi-tenancy:
  enabled: false
  # Tenant header name
  header: "jaeger-tenant"
  # Tenants configuration would go here

# CORS configuration
cors:
  allowed-origins:
    - "*"
  allowed-headers:
    - "Content-Type"
    - "Authorization"
    - "X-Requested-With"
  allowed-methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"

# Health check configuration
health-check:
  http:
    host-port: 0.0.0.0:14269

# Logging configuration
logging:
  level: info
  format: json
  # Log sampling (to reduce log volume)
  sampling:
    initial: 100
    thereafter: 100