# Alertmanager Configuration for Blog System
global:
  # SMTP configuration for email notifications
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'blog-system-alerts@example.com'
  smtp_auth_username: 'blog-system-alerts@example.com'
  smtp_auth_password: 'your-app-password'
  smtp_require_tls: true
  
  # Slack configuration
  slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
  
  # PagerDuty configuration
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
  
  # HTTP configuration
  http_config:
    tls_config:
      insecure_skip_verify: false
  
  # Resolve timeout
  resolve_timeout: 5m

# Templates for notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  # Default receiver
  receiver: 'default'
  
  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service']
  
  # Wait time before sending initial notification
  group_wait: 10s
  
  # Wait time before sending notification about new alerts added to group
  group_interval: 10s
  
  # Wait time before sending notification again
  repeat_interval: 1h
  
  # Child routes
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      group_interval: 5s
      repeat_interval: 15m
      routes:
        # Database critical alerts
        - match:
            service: postgresql
          receiver: 'database-critical'
          continue: true
        
        # Application critical alerts
        - match_re:
            service: 'blog-(frontend|backend)'
          receiver: 'application-critical'
          continue: true
        
        # Infrastructure critical alerts
        - match_re:
            service: 'system|docker|traefik'
          receiver: 'infrastructure-critical'
          continue: true
    
    # Warning alerts
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      routes:
        # Performance warnings
        - match_re:
            alertname: 'High.*|Slow.*'
          receiver: 'performance-warnings'
          continue: true
        
        # Security warnings
        - match_re:
            component: 'security'
          receiver: 'security-warnings'
          continue: true
    
    # Info alerts
    - match:
        severity: info
      receiver: 'info-alerts'
      group_wait: 5m
      group_interval: 30m
      repeat_interval: 24h
    
    # Business alerts
    - match:
        component: business
      receiver: 'business-alerts'
      group_wait: 1m
      group_interval: 10m
      repeat_interval: 6h
    
    # Monitoring stack alerts
    - match_re:
        service: 'prometheus|grafana|alertmanager|loki'
      receiver: 'monitoring-alerts'
      group_wait: 1m
      group_interval: 5m
      repeat_interval: 2h
    
    # Maintenance window - suppress all alerts
    - match:
        maintenance: 'true'
      receiver: 'null'
      group_wait: 0s
      group_interval: 0s
      repeat_interval: 1m

# Inhibition rules - suppress alerts based on other alerts
inhibit_rules:
  # Suppress warning alerts when critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  # Suppress instance alerts when entire service is down
  - source_match:
      alertname: 'InstanceDown'
    target_match_re:
      alertname: 'High.*|Slow.*'
    equal: ['instance']
  
  # Suppress application alerts when database is down
  - source_match:
      alertname: 'PostgreSQLDown'
    target_match_re:
      service: 'blog-(frontend|backend)'
    equal: ['cluster']
  
  # Suppress container alerts when node is down
  - source_match:
      alertname: 'InstanceDown'
    target_match_re:
      alertname: 'Container.*'
    equal: ['instance']

# Receivers configuration
receivers:
  # Default receiver
  - name: 'default'
    email_configs:
      - to: 'admin@example.com'
        subject: '[Blog System] {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}
        headers:
          X-Priority: '3'
  
  # Critical alerts receiver
  - name: 'critical-alerts'
    email_configs:
      - to: 'admin@example.com,oncall@example.com'
        subject: '[CRITICAL] Blog System Alert: {{ .GroupLabels.alertname }}'
        body: |
          üö® CRITICAL ALERT üö®
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}
          {{ if .Annotations.dashboard_url }}Dashboard: {{ .Annotations.dashboard_url }}{{ end }}
          {{ end }}
        headers:
          X-Priority: '1'
    
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-critical'
        title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          {{ if .Annotations.runbook_url }}*Runbook:* <{{ .Annotations.runbook_url }}|View Runbook>{{ end }}
          {{ end }}
        send_resolved: true
        color: 'danger'
    
    pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
        description: '{{ .GroupLabels.alertname }}: {{ .GroupLabels.service }}'
        severity: 'critical'
        details:
          summary: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
          service: '{{ .GroupLabels.service }}'
          cluster: '{{ .GroupLabels.cluster }}'
  
  # Database critical alerts
  - name: 'database-critical'
    email_configs:
      - to: 'dba@example.com,admin@example.com'
        subject: '[DATABASE CRITICAL] {{ .GroupLabels.alertname }}'
        body: |
          üî• DATABASE CRITICAL ALERT üî•
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Database: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
        headers:
          X-Priority: '1'
    
    slack_configs:
      - channel: '#database-alerts'
        title: 'üî• Database Critical: {{ .GroupLabels.alertname }}'
        color: 'danger'
  
  # Application critical alerts
  - name: 'application-critical'
    email_configs:
      - to: 'dev-team@example.com,admin@example.com'
        subject: '[APP CRITICAL] {{ .GroupLabels.alertname }}'
        body: |
          üí• APPLICATION CRITICAL ALERT üí•
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Application: {{ .Labels.service }}
          Component: {{ .Labels.component }}
          Instance: {{ .Labels.instance }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
        headers:
          X-Priority: '1'
    
    slack_configs:
      - channel: '#app-alerts'
        title: 'üí• Application Critical: {{ .GroupLabels.alertname }}'
        color: 'danger'
  
  # Infrastructure critical alerts
  - name: 'infrastructure-critical'
    email_configs:
      - to: 'ops-team@example.com,admin@example.com'
        subject: '[INFRA CRITICAL] {{ .GroupLabels.alertname }}'
        body: |
          ‚ö° INFRASTRUCTURE CRITICAL ALERT ‚ö°
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
        headers:
          X-Priority: '1'
    
    slack_configs:
      - channel: '#infrastructure-alerts'
        title: '‚ö° Infrastructure Critical: {{ .GroupLabels.alertname }}'
        color: 'danger'
  
  # Warning alerts receiver
  - name: 'warning-alerts'
    email_configs:
      - to: 'admin@example.com'
        subject: '[WARNING] Blog System: {{ .GroupLabels.alertname }}'
        body: |
          ‚ö†Ô∏è WARNING ALERT ‚ö†Ô∏è
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Severity: {{ .Labels.severity }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
        headers:
          X-Priority: '2'
    
    slack_configs:
      - channel: '#alerts-warning'
        title: '‚ö†Ô∏è Warning: {{ .GroupLabels.alertname }}'
        color: 'warning'
  
  # Performance warnings
  - name: 'performance-warnings'
    slack_configs:
      - channel: '#performance-alerts'
        title: 'üìä Performance Warning: {{ .GroupLabels.alertname }}'
        color: 'warning'
  
  # Security warnings
  - name: 'security-warnings'
    email_configs:
      - to: 'security@example.com,admin@example.com'
        subject: '[SECURITY WARNING] {{ .GroupLabels.alertname }}'
        headers:
          X-Priority: '1'
    
    slack_configs:
      - channel: '#security-alerts'
        title: 'üîí Security Warning: {{ .GroupLabels.alertname }}'
        color: 'warning'
  
  # Info alerts receiver
  - name: 'info-alerts'
    slack_configs:
      - channel: '#alerts-info'
        title: '‚ÑπÔ∏è Info: {{ .GroupLabels.alertname }}'
        color: 'good'
  
  # Business alerts receiver
  - name: 'business-alerts'
    email_configs:
      - to: 'business@example.com,admin@example.com'
        subject: '[BUSINESS ALERT] {{ .GroupLabels.alertname }}'
        body: |
          üìà BUSINESS ALERT üìà
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Metric: {{ .Labels.alertname }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
    
    slack_configs:
      - channel: '#business-metrics'
        title: 'üìà Business Alert: {{ .GroupLabels.alertname }}'
        color: 'warning'
  
  # Monitoring alerts receiver
  - name: 'monitoring-alerts'
    email_configs:
      - to: 'admin@example.com'
        subject: '[MONITORING] {{ .GroupLabels.alertname }}'
        body: |
          üîß MONITORING ALERT üîß
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
    
    slack_configs:
      - channel: '#monitoring-alerts'
        title: 'üîß Monitoring: {{ .GroupLabels.alertname }}'
        color: 'warning'
  
  # Null receiver for maintenance
  - name: 'null'

# Webhook configurations for external integrations
webhook_configs:
  - url: 'http://blog-backend:3001/api/webhooks/alerts'
    send_resolved: true
    http_config:
      basic_auth:
        username: 'webhook_user'
        password: 'webhook_password'
    max_alerts: 10

# Time intervals for muting
time_intervals:
  - name: 'maintenance-window'
    time_intervals:
      - times:
          - start_time: '02:00'
            end_time: '04:00'
        weekdays: ['sunday']
        months: ['1:12']
        days_of_month: ['1:31']
  
  - name: 'business-hours'
    time_intervals:
      - times:
          - start_time: '09:00'
            end_time: '17:00'
        weekdays: ['monday:friday']
  
  - name: 'weekend'
    time_intervals:
      - times:
          - start_time: '00:00'
            end_time: '23:59'
        weekdays: ['saturday', 'sunday']

# Mute time intervals
mute_time_intervals:
  - 'maintenance-window'