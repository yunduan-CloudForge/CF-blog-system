# Promtail Configuration for Blog System
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info
  log_format: json
  graceful_shutdown_timeout: 30s
  http_server_read_timeout: 30s
  http_server_write_timeout: 30s
  http_server_idle_timeout: 120s
  health_check_target: false

positions:
  filename: /tmp/positions.yaml
  sync_period: 10s
  ignore_invalid_yaml: false

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: ""
    batchwait: 1s
    batchsize: 1048576  # 1MB
    timeout: 10s
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    external_labels:
      cluster: blog-system
      environment: ${ENVIRONMENT:-development}
      region: ${REGION:-local}

scrape_configs:
  # Blog Frontend Logs
  - job_name: blog-frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: blog-frontend
          service: frontend
          component: web
          __path__: /var/log/blog-frontend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            method: method
            url: url
            status: status
            response_time: response_time
            user_agent: user_agent
            ip: ip
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          method:
          status:
          user_id:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Blog Backend Logs
  - job_name: blog-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: blog-backend
          service: backend
          component: api
          __path__: /var/log/blog-backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            method: method
            route: route
            status_code: status_code
            response_time: response_time
            user_id: user_id
            request_id: request_id
            error: error
            stack: stack
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          method:
          route:
          status_code:
          user_id:
          request_id:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Database Logs (PostgreSQL)
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          service: database
          component: postgres
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'
      - labels:
          level:
          pid:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Redis Logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          component: redis
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):[A-Z] (?P<timestamp>\d{2} \w+ \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>[*#.-]) (?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '02 Jan 2006 15:04:05.000'
      - labels:
          level:
          pid:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Nginx Access Logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: proxy
          component: nginx
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>\S+) \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)"'
      - timestamp:
          source: timestamp
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          method:
          status:
          remote_addr:
      - output:
          source: path
      - labeldrop:
          - timestamp

  # Nginx Error Logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: proxy
          component: nginx
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'
      - labels:
          level:
          pid:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Docker Container Logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: output
      - labeldrop:
          - filename

  # System Logs (syslog)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          component: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<process>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
          action_on_failure: skip
      - labels:
          hostname:
          process:
          pid:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Application Metrics Logs
  - job_name: metrics-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: metrics
          service: monitoring
          component: metrics
          __path__: /var/log/metrics/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            metric_name: metric_name
            metric_value: metric_value
            labels: labels
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          metric_name:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Security Logs
  - job_name: security
    static_configs:
      - targets:
          - localhost
        labels:
          job: security
          service: security
          component: auth
          __path__: /var/log/security/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            event_type: event_type
            user_id: user_id
            ip_address: ip_address
            user_agent: user_agent
            success: success
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          event_type:
          user_id:
          success:
      - output:
          source: message
      - labeldrop:
          - timestamp
          - message

  # Audit Logs
  - job_name: audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: audit
          service: audit
          component: trail
          __path__: /var/log/audit/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            action: action
            resource: resource
            user_id: user_id
            ip_address: ip_address
            result: result
            details: details
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          action:
          resource:
          user_id:
          result:
      - output:
          source: details
      - labeldrop:
          - timestamp

# Limits configuration
limits_config:
  readline_rate: 10000
  readline_burst: 20000
  max_streams: 0

# Target configuration
target_config:
  sync_period: 10s

# Tracing configuration
tracing:
  enabled: false

# Server configuration
server_config:
  log_level: info
  log_format: json
  http_listen_port: 9080
  grpc_listen_port: 0
  register_instrumentation: true
  graceful_shutdown_timeout: 30s
  http_server_read_timeout: 30s
  http_server_write_timeout: 30s
  http_server_idle_timeout: 120s
  grpc_server_max_recv_msg_size: 4194304  # 4MB
  grpc_server_max_send_msg_size: 4194304  # 4MB
  grpc_server_max_concurrent_streams: 100
  log_source_ips_enabled: true
  log_source_ips_header: "X-Forwarded-For"
  log_source_ips_regex: "^(\\S+)"
  http_path_prefix: ""
  health_check_target: false