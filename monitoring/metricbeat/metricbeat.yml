###################### Metricbeat Configuration Example #########################

# This file is an example configuration file highlighting only the most common
# options. The metricbeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/metricbeat/index.html

# =========================== Modules configuration ============================

metricbeat.config.modules:
  # Glob pattern for configuration loading
  path: ${path.config}/modules.d/*.yml

  # Set to true to enable config reloading
  reload.enabled: true

  # Period on which files under path should be checked for changes
  reload.period: 10s

# ======================= Elasticsearch template setting =======================

setup.template.settings:
  index.number_of_shards: 1
  index.number_of_replicas: 0
  index.codec: best_compression
  _source.enabled: true

# ================================== General ===================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
name: blog-system-metricbeat

# The tags of the shipper are included in their own field with each
# transaction published.
tags: ["blog-system", "metricbeat", "${ENVIRONMENT:development}"]

# Optional fields that you can specify to add additional information to the
# output.
fields:
  environment: ${ENVIRONMENT:development}
  datacenter: ${DATACENTER:local}
  project: blog-system

fields_under_root: false

# ================================= Dashboards =================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here or by using the `setup` command.
setup.dashboards.enabled: true

# =================================== Kibana ===================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:
  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  host: "kibana:5601"

# ================================== Outputs ===================================

# Configure what output to use when sending the data collected by the beat.

# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["elasticsearch:9200"]

  # Protocol - either `http` (default) or `https`.
  #protocol: "https"

  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  #username: "elastic"
  #password: "changeme"

  # Index name
  index: "metricbeat-%{[agent.version]}-%{+yyyy.MM.dd}"

  # Template settings
  template.name: "metricbeat"
  template.pattern: "metricbeat-*"
  template.settings:
    index.number_of_shards: 1
    index.number_of_replicas: 0
    index.codec: best_compression

  # ILM settings
  ilm.enabled: true
  ilm.rollover_alias: "metricbeat"
  ilm.pattern: "{now/d}-000001"
  ilm.policy: "metricbeat-policy"

# ================================= Processors =================================

processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
  - drop_fields:
      fields: ["agent.ephemeral_id", "agent.id", "ecs.version"]
      ignore_missing: true

# ================================== Logging ===================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
logging.level: info

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publisher", "service".
#logging.selectors: ["*"]

# Logging to rotating files
logging.to_files: true
logging.files:
  path: /var/log/metricbeat
  name: metricbeat
  keepfiles: 7
  permissions: 0644
  rotateeverybytes: 10485760 # = 10MB

# ============================= X-Pack Monitoring ==============================
# Metricbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
monitoring.enabled: true

# Sets the UUID of the Elasticsearch cluster under which monitoring data for this
# Metricbeat instance will appear in the Stack Monitoring UI. If output.elasticsearch
# is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.
#monitoring.cluster_uuid:

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well.
# Note that the settings should point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration, so if you have the Elasticsearch output configured such
# that it is pointing to your Elasticsearch monitoring cluster, you can simply
# uncomment the following line.
monitoring.elasticsearch:
  hosts: ["elasticsearch:9200"]
  #username: monitoring_user
  #password: monitoring_pass

# ============================== Instrumentation ===============================

# Instrumentation support for the metricbeat.
instrumentation:
  # Set to true to enable instrumentation of metricbeat.
  enabled: false

  # Environment in which metricbeat is running on (eg: staging, production, etc.)
  environment: "${ENVIRONMENT:development}"

  # APM Server hosts to report instrumentation results to.
  hosts:
    - http://apm-server:8200

  # API Key for the APM Server(s).
  # If api_key is set then secret_token will be ignored.
  #api_key:

  # Secret token for the APM Server(s).
  #secret_token:

# ================================== HTTP Endpoint =============================

# Each beat can expose internal metrics through a HTTP endpoint. For security
# reasons the endpoint is disabled by default. This feature is currently experimental.
# Stats can be access through http://localhost:5067/stats . For pretty JSON add
# ?pretty to the URL.

# Defines if the HTTP endpoint is enabled.
http.enabled: true

# The HTTP endpoint will bind to this hostname, IP address, unix socket or named pipe.
# When using IP addresses, it is recommended to only use localhost.
http.host: "0.0.0.0"

# Port on which the HTTP endpoint will bind. Default is 5067.
http.port: 5067

# ============================== Autodiscover ==================================

# Autodiscover allows you to detect changes in the system and spawn new modules as they happen.

metricbeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true
      templates:
        - condition:
            contains:
              docker.container.image: nginx
          config:
            - module: nginx
              metricsets: ["stubstatus"]
              period: 10s
              hosts: ["http://${data.docker.container.name}:80/nginx_status"]
        - condition:
            contains:
              docker.container.image: redis
          config:
            - module: redis
              metricsets: ["info", "keyspace"]
              period: 10s
              hosts: ["redis://${data.docker.container.name}:6379"]
        - condition:
            contains:
              docker.container.image: postgres
          config:
            - module: postgresql
              metricsets: ["database", "bgwriter", "activity"]
              period: 10s
              hosts: ["postgres://postgres:password@${data.docker.container.name}:5432/postgres?sslmode=disable"]
        - condition:
            contains:
              docker.container.image: elasticsearch
          config:
            - module: elasticsearch
              metricsets: ["node", "node_stats", "cluster_stats"]
              period: 10s
              hosts: ["http://${data.docker.container.name}:9200"]
    - type: kubernetes
      node: ${NODE_NAME}
      hints.enabled: true
      templates:
        - condition:
            contains:
              kubernetes.labels.app: nginx
          config:
            - module: nginx
              metricsets: ["stubstatus"]
              period: 10s
              hosts: ["http://${data.host}:${data.port}/nginx_status"]
        - condition:
            contains:
              kubernetes.labels.app: redis
          config:
            - module: redis
              metricsets: ["info", "keyspace"]
              period: 10s
              hosts: ["redis://${data.host}:${data.port}"]
        - condition:
            contains:
              kubernetes.labels.app: postgresql
          config:
            - module: postgresql
              metricsets: ["database", "bgwriter", "activity"]
              period: 10s
              hosts: ["postgres://postgres:password@${data.host}:${data.port}/postgres?sslmode=disable"]

# ============================== Modules ====================================

# System module - collect system metrics
metricbeat.modules:

# System module
- module: system
  metricsets:
    - cpu             # CPU usage
    - load            # CPU load averages
    - memory          # Memory usage
    - network         # Network IO
    - process         # Per process metrics
    - process_summary # Process summary
    - uptime          # System uptime
    - socket_summary  # Socket summary
    - core            # Per CPU core usage
    - diskio          # Disk IO
    - filesystem      # Filesystem usage
    - fsstat          # File system summary
    - raid            # Raid
    - socket          # Sockets and connection info (linux only)
    - service         # systemd service status
  enabled: true
  period: 10s
  processes: ['.*']
  cpu.metrics:  ["percentages", "normalized_percentages"]
  core.metrics: ["percentages"]

# Docker module
- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "event"
    - "healthcheck"
    - "info"
    - "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s
  enabled: true

# Kubernetes module
- module: kubernetes
  metricsets:
    - node
    - system
    - pod
    - container
    - volume
  period: 10s
  host: ${NODE_NAME}
  hosts: ["https://${NODE_NAME}:10250"]
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  ssl.certificate_authorities:
    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  ssl.verification_mode: "certificate"
  enabled: false  # Enable only in Kubernetes environment

# HTTP module - monitor HTTP endpoints
- module: http
  metricsets:
    - json
  period: 30s
  hosts: ["http://blog-system-api:3000/health"]
  namespace: "blog_system_api"
  path: "/health"
  enabled: true

- module: http
  metricsets:
    - json
  period: 30s
  hosts: ["http://nginx:80/nginx_status"]
  namespace: "nginx"
  path: "/nginx_status"
  enabled: true

# PostgreSQL module
- module: postgresql
  metricsets:
    - database
    - bgwriter
    - activity
  period: 10s
  hosts: ["postgres://postgres:${POSTGRES_PASSWORD:password}@postgres:5432/postgres?sslmode=disable"]
  enabled: true

# Redis module
- module: redis
  metricsets: ["info", "keyspace"]
  period: 10s
  hosts: ["redis://redis:6379"]
  enabled: true

# Nginx module
- module: nginx
  metricsets: ["stubstatus"]
  period: 10s
  hosts: ["http://nginx:80/nginx_status"]
  enabled: true

# Elasticsearch module
- module: elasticsearch
  metricsets:
    - node
    - node_stats
    - cluster_stats
  period: 10s
  hosts: ["http://elasticsearch:9200"]
  enabled: true

# Kibana module
- module: kibana
  metricsets:
    - status
    - stats
  period: 10s
  hosts: ["http://kibana:5601"]
  enabled: true

# Prometheus module
- module: prometheus
  metricsets: ["collector"]
  period: 10s
  hosts: ["http://prometheus:9090"]
  metrics_path: /metrics
  enabled: true

# Grafana module
- module: prometheus
  metricsets: ["collector"]
  period: 10s
  hosts: ["http://grafana:3000"]
  metrics_path: /metrics
  enabled: true

# Node Exporter module
- module: prometheus
  metricsets: ["collector"]
  period: 10s
  hosts: ["http://node-exporter:9100"]
  metrics_path: /metrics
  enabled: true

# cAdvisor module
- module: prometheus
  metricsets: ["collector"]
  period: 10s
  hosts: ["http://cadvisor:8080"]
  metrics_path: /metrics
  enabled: true

# Traefik module
- module: traefik
  metricsets: ["health"]
  period: 10s
  hosts: ["http://traefik:8080"]
  enabled: true

# Beat module - monitor other beats
- module: beat
  metricsets:
    - stats
    - state
  period: 10s
  hosts: ["http://filebeat:5066", "http://metricbeat:5067"]
  enabled: true

# Logstash module (if using Logstash)
- module: logstash
  metricsets: ["node", "node_stats"]
  period: 10s
  hosts: ["http://logstash:9600"]
  enabled: false

# HAProxy module (if using HAProxy)
- module: haproxy
  metricsets: ["info", "stat"]
  period: 10s
  hosts: ["http://haproxy:8404/stats"]
  enabled: false

# Apache module (if using Apache)
- module: apache
  metricsets: ["status"]
  period: 10s
  hosts: ["http://apache:80/server-status?auto"]
  enabled: false

# MongoDB module (if using MongoDB)
- module: mongodb
  metricsets: ["dbstats", "status", "collstats", "metrics", "replstatus"]
  period: 10s
  hosts: ["mongodb://mongodb:27017"]
  enabled: false

# MySQL module (if using MySQL)
- module: mysql
  metricsets:
    - status
    - galera_status
    - performance
    - innodb
    - query
  period: 10s
  hosts: ["root:password@tcp(mysql:3306)/"]
  enabled: false

# RabbitMQ module (if using RabbitMQ)
- module: rabbitmq
  metricsets: ["node", "queue", "connection", "exchange"]
  period: 10s
  hosts: ["http://guest:guest@rabbitmq:15672"]
  enabled: false

# Memcached module (if using Memcached)
- module: memcached
  metricsets: ["stats"]
  period: 10s
  hosts: ["memcached:11211"]
  enabled: false

# Zookeeper module (if using Zookeeper)
- module: zookeeper
  metricsets: ["mntr", "server"]
  period: 10s
  hosts: ["zookeeper:2181"]
  enabled: false

# Kafka module (if using Kafka)
- module: kafka
  metricsets:
    - partition
    - consumergroup
  period: 10s
  hosts: ["kafka:9092"]
  enabled: false

# Consul module (if using Consul)
- module: consul
  metricsets: ["agent"]
  period: 10s
  hosts: ["http://consul:8500"]
  enabled: false

# Etcd module (if using Etcd)
- module: etcd
  metricsets: ["leader", "self", "store"]
  period: 10s
  hosts: ["http://etcd:2379"]
  enabled: false

# Jolokia module (for JMX metrics)
- module: jolokia
  metricsets: ["jmx"]
  period: 10s
  hosts: ["http://jolokia:8778"]
  namespace: "jolokia_metrics"
  enabled: false

# Windows module (Windows only)
- module: windows
  metricsets: ["perfmon"]
  period: 10s
  perfmon.counters:
    - instance_label: "processor.name"
      instance_name: "total"
      measurement_label: "processor.time.total.pct"
      query: '\Processor Information(_Total)\% Processor Time'
  enabled: false