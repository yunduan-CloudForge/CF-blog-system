server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: tenant1
    batchwait: 1s
    batchsize: 1048576
    timeout: 10s
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    # The labels to add to any time series or alerts when communicating with loki
    external_labels:
      cluster: 'blog-system'
      environment: '${ENVIRONMENT:-development}'

scrape_configs:
  # Application logs
  - job_name: application
    static_configs:
      - targets:
          - localhost
        labels:
          job: blog-system
          service: application
          environment: '${ENVIRONMENT:-development}'
          __path__: /var/log/blog-system/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            trace_id: trace_id
            span_id: span_id
            user_id: user_id
            request_id: request_id
            method: method
            url: url
            status_code: status_code
            response_time: response_time
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
          trace_id:
          span_id:
          user_id:
          request_id:
          method:
          status_code:
      - output:
          source: message

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: access
          environment: '${ENVIRONMENT:-development}'
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\w\.]+) - (?P<remote_user>\S+) \[(?P<time_local>[\w:/]+\s[+\-]\d{4})\] "(?P<method>\S+) (?P<request>\S+) (?P<protocol>\S+)" (?P<status>\d{3}) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)"'
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          method:
          status:
          remote_addr:
      - metrics:
          nginx_requests_total:
            type: Counter
            description: "Total number of requests"
            config:
              action: inc
          nginx_request_duration_seconds:
            type: Histogram
            description: "Request duration in seconds"
            config:
              buckets: [0.1, 0.5, 1, 2, 5, 10]

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: error
          environment: '${ENVIRONMENT:-development}'
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'
      - labels:
          level:
          pid:

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*?)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'
    pipeline_stages:
      - cri: {}
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
      - output:
          source: message

  # System logs (syslog)
  - job_name: syslog
    syslog:
      listen_address: 0.0.0.0:1514
      idle_timeout: 60s
      label_structured_data: yes
      labels:
        job: "syslog"
        environment: '${ENVIRONMENT:-development}'
    relabel_configs:
      - source_labels: ['__syslog_message_hostname']
        target_label: 'host'
      - source_labels: ['__syslog_message_severity']
        target_label: 'level'
      - source_labels: ['__syslog_message_app_name']
        target_label: 'application'
      - source_labels: ['__syslog_message_facility']
        target_label: 'facility'
    pipeline_stages:
      - json:
          expressions:
            message: message
            timestamp: timestamp
      - labels:
          level:
          application:
          facility:
          host:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message

  # Journal logs (systemd)
  - job_name: journal
    journal:
      max_age: 12h
      labels:
        job: systemd-journal
        environment: '${ENVIRONMENT:-development}'
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
      - source_labels: ['__journal__boot_id']
        target_label: 'boot_id'
      - source_labels: ['__journal__machine_id']
        target_label: 'machine_id'
      - source_labels: ['__journal__hostname']
        target_label: 'hostname'
    pipeline_stages:
      - json:
          expressions:
            level: PRIORITY
            message: MESSAGE
            timestamp: __REALTIME_TIMESTAMP
      - timestamp:
          source: timestamp
          format: Unix
      - labels:
          level:
          unit:
          hostname:
      - output:
          source: message

  # Kubernetes pods (if running in k8s)
  - job_name: kubernetes-pods
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_pod_controller_name
        regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
        action: replace
        target_label: __tmp_controller_name
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          - __meta_kubernetes_pod_label_app
          - __tmp_controller_name
          - __meta_kubernetes_pod_name
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: app
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_instance
          - __meta_kubernetes_pod_label_release
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: instance
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_component
          - __meta_kubernetes_pod_label_component
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: component
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node_name
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - namespace
        - app
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        separator: /
        target_label: __path__
        replacement: /var/log/pods/*$1/*.log
      - action: replace
        regex: true/(.*)
        replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
        - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
        - __meta_kubernetes_pod_container_name
        target_label: __path__
    pipeline_stages:
      - cri: {}
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
      - output:
          source: message