name: Deploy Blog System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run check
    
    - name: Run linter
      run: npm run lint
    
    - name: Build frontend
      run: npm run build
    
    - name: Test backend compilation
      run: npx tsc --project api/tsconfig.json --noEmit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd /var/www/blog-system
          git pull origin main
          npm ci --production
          npm run build
          pm2 reload ecosystem.config.js --env production
    
    - name: Health check
      run: |
        sleep 30
        curl -f ${{ secrets.HEALTH_CHECK_URL }} || exit 1

  docker-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-system-frontend:latest -f Dockerfile.frontend .
        docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-system-backend:latest -f Dockerfile.backend .
        docker push ${{ secrets.DOCKER_USERNAME }}/blog-system-frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/blog-system-backend:latest
    
    - name: Deploy with Docker Compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd /var/www/blog-system
          git pull origin main
          docker-compose pull
          docker-compose up -d --remove-orphans
          docker system prune -f